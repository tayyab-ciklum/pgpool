{"version":3,"sources":["views/add-node/index.jsx","views/dashboard/index.jsx"],"names":["AddNodeModal","isModalVisible","setIsModalVisible","layout","labelCol","span","wrapperCol","handleOk","handleCancel","title","visible","onOk","onCancel","footer","key","onClick","type","Item","label","name","rules","required","message","Password","Dashboard","useState","style","float","marginBottom","icon","PlusOutlined"],"mappings":"iLAmFeA,EAjFM,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,eAAgBC,EAAuB,EAAvBA,kBAC7BC,EAAS,CACXC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,KAGNE,EAAW,WACbL,GAAkB,IAGdM,EAAe,WACnBN,GAAkB,IAEtB,OACI,oCACA,kBAAC,IAAD,CAAOO,MAAM,WAAWC,QAAST,EAAgBU,KAAMJ,EAAUK,SAAUJ,EAC3EK,OAAQ,CACJ,kBAAC,IAAD,CAAQC,IAAI,SAASC,QAAS,kBAAMP,MAApC,UAGA,kBAAC,IAAD,CAAQM,IAAI,SAASE,KAAK,UAAUD,QAAS,kBAAMR,MAAnD,YAIJ,kBAAC,IAAWJ,EACZ,kBAAC,IAAKc,KAAN,CACAC,MAAM,WACNC,KAAK,WACLC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,cAIb,kBAAC,IAAD,OAEF,kBAAC,IAAKL,KAAN,CACEC,MAAM,WACNC,KAAK,WACLC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,cAIb,kBAAC,IAAMC,SAAP,OAEF,kBAAC,IAAKN,KAAN,CACEC,MAAM,WACNC,KAAK,WACLC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,cAIb,kBAAC,IAAD,OAEF,kBAAC,IAAKL,KAAN,CACEC,MAAM,eACNC,KAAK,OACLC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,cAIb,kBAAC,IAAD,WC9DOE,UAVG,WAAO,IAAD,EACwBC,oBAAS,GADjC,mBACbxB,EADa,KACGC,EADH,KAEpB,OACI,6BACI,kBAAC,IAAD,CAAQc,KAAK,UAAUD,QAAS,kBAAMb,GAAmBD,IAAiByB,MAAO,CAACC,MAAO,QAASC,aAAc,QAASC,KAAM,kBAACC,EAAA,EAAD,OAA/H,aACA,kBAAC,EAAD,CAAc7B,eAAgBA,EAAgBC,kBAAmBA","file":"static/js/8.5d7fed21.chunk.js","sourcesContent":["import React from 'react';\nimport {Modal, Form, Input, Button } from \"antd\";\nconst AddNodeModal = ({isModalVisible, setIsModalVisible}) => {\n    const layout = {\n        labelCol: {\n          span: 6,\n        },\n        wrapperCol: {\n          span: 18,\n        },\n      };\n    const handleOk = () => {\n        setIsModalVisible(false);\n      };\n    \n      const handleCancel = () => {\n        setIsModalVisible(false);\n      };\n    return (\n        <>\n        <Modal title=\"Add Node\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel} \n        footer={[\n            <Button key=\"cancel\" onClick={() => handleCancel()}>\n              Cancel\n            </Button>,\n            <Button key=\"submit\" type=\"primary\" onClick={() => handleOk()}>\n              Submit\n            </Button>,\n          ]}>\n        <Form   {...layout}>\n        <Form.Item\n        label=\"Username\"\n        name=\"username\"\n        rules={[\n          {\n            required: true,\n            message: 'Required',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label=\"Password\"\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: 'Required',\n          },\n        ]}\n      >\n        <Input.Password />\n      </Form.Item>\n      <Form.Item\n        label=\"Hostname\"\n        name=\"hostname\"\n        rules={[\n          {\n            required: true,\n            message: 'Required',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label=\"Port Address\"\n        name=\"port\"\n        rules={[\n          {\n            required: true,\n            message: 'Required',\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n        </Form>\n      </Modal>\n        </>\n    );\n};\nexport default AddNodeModal;\n","import React, { useState } from 'react';\nimport { Button } from \"antd\";\nimport { PlusOutlined } from '@ant-design/icons';\nimport AddNodeModal from '../add-node';\nconst Dashboard = () => {\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    return (\n        <div>\n            <Button type=\"primary\" onClick={() => setIsModalVisible(!isModalVisible)} style={{float: 'right', marginBottom: '10px'}} icon={<PlusOutlined />}>Add Node </Button>\n            <AddNodeModal isModalVisible={isModalVisible} setIsModalVisible={setIsModalVisible}/>\n        \n        </div>\n    );\n};\nexport default Dashboard;\n"],"sourceRoot":""}